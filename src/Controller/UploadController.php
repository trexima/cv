<?php

namespace Trexima\EuropeanCvBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Trexima\EuropeanCvBundle\Manager\EuropeanCvManager;

#[Route(path: '/trexima-european-cv-bundle-upload')]
class UploadController extends AbstractController
{
    final public const MAX_IMAGE_FILE_SIZE = 2048; // in Kb

    /**
     * @var array Only this mime types can be uploaded. Mime type is guessed with MimeTypeGuesser
     */
    final public const ALLOWED_IMAGE_MIME_TYPES = [
        'image/jpeg',
        'image/png'
    ];

    public function __construct(private readonly string $uploadDir, private readonly EuropeanCvManager $europeanCvManager)
    {
    }

    #[Route(path: '/image', name: 'trexima_european_cv_bundle_image')]
    public function image(Request $request): Response
    {
        $jsonData = [];

        /**
         * @var UploadedFile $file
         */
        foreach ($request->files->all() as $file) {
            $fileJsonData = ['name' => $file->getClientOriginalName(), 'size' => $file->getSize()];
            if (!in_array($file->getMimeType(), self::ALLOWED_IMAGE_MIME_TYPES)) {
                $fileJsonData['error'] = 'Nesprávny formát súboru!';
                $jsonData['files'][] = $fileJsonData;
                continue;
            }

            if ($file->getSize() > self::MAX_IMAGE_FILE_SIZE * 1024) {
                $fileJsonData['error'] = 'Súbor je príliš veľký!';
                $jsonData['files'][] = $fileJsonData;
                continue;
            }

            $imageUploadDir = rtrim($this->uploadDir, '\\/').'/images/';
            if (!file_exists($imageUploadDir)) {
                if (!mkdir($imageUploadDir, 0777, true) && !is_dir($imageUploadDir)) {
                    throw new \RuntimeException(sprintf('Directory "%s" was not created', $imageUploadDir));
                }
            }

            /**
             * md5() reduces the similarity of the file names
             * generated by uniqid(), which is based on timestamps
             */
            $filename = md5(uniqid('', true)).'.jpeg'; // Always use jpg for resized images
            try {
                $this->europeanCvManager->saveThumbnail($file, $imageUploadDir, $filename);
            } catch (\Exception $e) {
                $fileJsonData['error'] = $e->getMessage();
                $jsonData['files'][] = $fileJsonData;
                continue;
            }

            $fileJsonData['filename'] = $filename;
            $fileJsonData['thumbnailFilename'] = $fileJsonData['filename']; // TODO: Generate thumbnails

            $jsonData['files'][] = $fileJsonData;
        }

        return new JsonResponse($jsonData);
    }
}